FROM debian:bullseye

ENV HOME /root
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get -y update

RUN apt-get -y --no-install-recommends install \
    build-essential \
    ca-certificates \
    curl \
    doxygen \
    g++ \
    gdb \
    git \
    gnupg \
    gpg \
    less \
    libboost-all-dev \
    libc-ares-dev \
    libre2-dev \
    libssl-dev \
    ninja-build \
    pkg-config \
    software-properties-common \
    sudo \
    wget \
    zlib1g-dev \
    libprotobuf-dev

# Add the public key for the llvm repository
RUN bash -c 'wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add -'
RUN apt-add-repository -y 'deb http://apt.llvm.org/bullseye/ llvm-toolchain-bullseye-15 main'
RUN apt-add-repository -y 'deb http://deb.debian.org/debian bullseye-backports main'

RUN apt-get update

RUN apt-get -y --no-install-recommends install -t llvm-toolchain-bullseye-15 \
    clang-15 \
    clang-tidy-15

RUN apt-get -y --no-install-recommends install -t bullseye-backports \
    cmake

RUN mkdir -p ${HOME}/opt/src

# Install grpc
RUN cd ${HOME}/opt/src && \
    git clone --recurse-submodules -b v1.52.0 --depth 1 --shallow-submodules https://github.com/grpc/grpc && \
    cd grpc && \
    mkdir -p build && \
    cd build && \
    cmake .. -G Ninja \
        -DgRPC_ZLIB_PROVIDER=package \
        -DgRPC_CARES_PROVIDER=package \
        -DgRPC_RE2_PROVIDER=package \
        -DgRPC_SSL_PROVIDER=package \
        -DgRPC_INSTALL=ON \
        -DgRPC_BUILD_TESTS=OFF \
        -DBUILD_SHARED_LIBS=ON \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_INSTALL_RPATH=/usr/local/lib && \
    ninja install && \
    cd .. && \
    rm -rf build

# Install viam-cpp-sdk
RUN mkdir -p ${HOME}/opt/src
RUN cd ${HOME}/opt/src && \
    git clone https://github.com/viamrobotics/viam-cpp-sdk && \
    cd viam-cpp-sdk && \
    mkdir build && \
    cd build && \
    cmake .. -G Ninja && \
    ninja all -j 3 && \
    ninja install -j 3

RUN cp -r ${HOME}/opt/src/viam-cpp-sdk/build/install/* /usr/local/

# Install appimage-builder
RUN apt-get install fakeroot libgtk-3-bin squashfs-tools -y
RUN apt install python3-pip -y
RUN pip install -U pip setuptools
RUN pip install urllib3==1.26.12 requests==2.26.0
RUN cd ${HOME}/opt/src && \
    git clone https://github.com/AppImageCrafters/appimage-builder.git && \
    cd appimage-builder && \
    pip install ./

# Install docker
RUN apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
RUN echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update
RUN apt-get -y install docker-ce docker-ce-cli containerd.io
